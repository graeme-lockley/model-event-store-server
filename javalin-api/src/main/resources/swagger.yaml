openapi: 3.0.1
info:
  title: Event Store API
  description: >
    This API describes a set of services over an event stream.  This implementation has the following characteristics:

    * The event store support topics where events are associated with a specific topic

    * Each event can have different versions where each version will define what aggregate roots are associated with it

    * The event content is not defined other than being an arbitrary string.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/api'
tags:
  - name: events
  - name: topics
paths:
  /events:
    get:
      tags:
        - events
      summary: Sequence of all events in the order
      operationId: getEvents
      parameters:
        - name: start
          in: query
          schema:
            type: integer
            format: int32
          description: >-
            An optional value denoting the start of the events to be retrieved.
            Note that the first event returned id will be the next event
            immediately following this ID.
        - name: pagesize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
          description: >-
            Used for pagination.  A server might choose to place an upper bound
            on this value.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags:
        - events
      summary: Append a new event to the event stream
      operationId: saveEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  '/events/{id}':
    get:
      tags:
        - events
      summary: Detail associated with a specific event
      operationId: getEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '412':
          description: no event associated with the passed ID
          content: {}
        default:
          description: successful operation
          content: {}

  /topics:
    get:
      tags:
        - topics
      summary: Sequence of all topics in the order
      operationId: getTopics
      parameters:
        - name: from
          in: query
          schema:
            type: integer
            format: int32
          description: >-
            An optional value denoting the start of the topics to be retrieved.
            Note that the first topic returned id will be the next topic
            immediately following this ID.
        - name: pagesize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
          description: >-
            Used for pagination.  A server might choose to place an upper bound
            on this value.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
    post:
      tags:
        - topics
      summary: Add a new topic
      operationId: saveTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTopic'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'

  '/topics/{id}':
    get:
      tags:
        - topics
      summary: Detail associated with a specific topic
      operationId: getTopic
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '412':
          description: no topic associated with the passed ID
          content: {}
        default:
          description: successful operation
          content: {}

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: >
            A strictly increasing value denoting the sequence of events.  No
            assumptions can be made regarding this value other than:

            * There might be holes in the sequence

            * The sequence is not defined to start with a specific value

            This value is automatically asigned when the event is added to the
            stream.
        when:
          type: string
          format: date-time
          description: >-
            The date/time when this event was created.  Note that this value is
            automatically assigned when the event is added to the stream.
        name:
          type: string
          description: The event's name
        content:
          type: string
          description: >-
            The content can be anything.  Note though that, as an event is JSON,
            the value of content will be marked up to avoid clashing with the
            JSON structure.
    NewEvent:
      type: object
      properties:
        name:
          type: string
          description: The event's name
        content:
          type: string
          description: 'The content can be anything - JSON, XML or anything that is relevant'
    Topic:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: |
            An ID that uniquely determines a specific topic
        name:
          type: string
          description: The topic's name
    NewTopic:
      type: object
      properties:
        name:
          type: string
          description: The topic's name
